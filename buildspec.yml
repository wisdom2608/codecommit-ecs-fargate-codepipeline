# Deploy Containerized Application Automatically To AWS ECS Using CodeCommit!
version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$REPOSITORY_URI:$IMAGE_TAG" > imagedefinitions.json

artifacts:
    files: imagedefinitions.json


# Environment Variables
# To make this file work, set the following environment variables in your CodeBuild project:

# AWS_DEFAULT_REGION: The AWS region where your ECR and ECS are hosted (e.g., us-west-2).
# AWS_ACCOUNT_ID: Your AWS account ID.
# IMAGE_REPO_NAME: The name of your EcR repository.
# REPOSITORY_URI: The URI of your ECR repository.
# IMAGE_TAG: The tag you want to use for your Docker image (e.g., latest).
# CONTAINER_NAME: The name of your container (you provided this name under task definition).
# ECS_SERVICE_NAME: The name of your ECS service. 
